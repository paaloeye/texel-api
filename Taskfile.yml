# Ref: https://taskfile.dev/reference/schema

version: '3'

vars:
  API_BASE_URI: "http://localhost:8080/v1/projects/feedface-cafe-beef-feed-facecafebeef"
  CURL_ARGS: "-v --fail-with-body"

tasks:
  run:
    set: ["e", "u", "x"]
    cmds:
      - go mod tidy
      - go generate
      - go run -race cmd/main.go

  test-integration:
    set: ["e", "u", "x"]
    cmds:
      - |

        # TODO: Fix interpolation error
        curl -v --data '\{wat"data": \{\}\}' -X PATCH "{{ .API_BASE_URI }}/building_limits" | jq .

  # Make sure we don't crash and burn due to something small and stupid
  # test-smoke:
  #   set: ["e", "u", "x"]

  # Test a few API calls with
  test-stress:
    set: ["e", "u", "x", "pipefail"]
    cmds:
      # PATCH
      - hyperfine "curl -v --data @testdata/happypath/building_limits.geojson -X PATCH '{{ .API_BASE_URI }}/building_limits' | jq ."

      # GET
      - hyperfine "curl -v '{{ .API_BASE_URI }}/building_limits' | jq ."

  # La Vie En Rose mode
  test-happy-path:
    set: ["e", "u", "x", "pipefail"]
    cmds:
      - |

        # Test All GETs with pristine DB
        curl {{ .CURL_ARGS }} "{{ .API_BASE_URI }}/building_limits" | jq .
        curl {{ .CURL_ARGS }} "{{ .API_BASE_URI }}/split_building_limits" | jq .
        curl {{ .CURL_ARGS }} "{{ .API_BASE_URI }}/height_plateaus" | jq .

        # Create building limits
        curl {{ .CURL_ARGS }} -X PATCH --data @testdata/happypath/building_limits.geojson "{{ .API_BASE_URI }}/building_limits" | jq .

        # Create height plateaux
        curl {{ .CURL_ARGS }} -X PATCH --data @testdata/happypath/height_plateaux.geojson "{{ .API_BASE_URI }}/height_plateaus" | jq .

        # Fetch the limits
        curl {{ .CURL_ARGS }} "{{ .API_BASE_URI }}/split_building_limits" | jq .

  test-integration-dre-building-limits-overlapped:
    set: ["e", "u", "x", "pipefail"]
    cmds:
      - |

        curl {{ .CURL_ARGS }} -X PATCH --data @testdata/dre/collection/err_overlapped.geojson "{{ .API_BASE_URI }}/building_limits" | jq .

  # test-integration-dre-building-limits-self-intersection:
  #   set: ["e", "u", "x", "pipefail"]
  #   cmds:
  #     - |

  #       curl {{ .CURL_ARGS }} -X PATCH --data @testdata/dre/collection/err_self_intersection.geojson "{{ .API_BASE_URI }}/building_limits" | jq .
