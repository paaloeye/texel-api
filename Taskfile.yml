version: '3'

vars:
  API_BASE_URI: "http://localhost:8080/v1/projects/feedface-cafe-beef-feed-facecafebeef"

tasks:
  run:
    set: ["e", "u", "x"]
    cmds:
      - go mod tidy
      - go run -race cmd/main.go

  test-integration:
    set: ["e", "u", "x"]
    cmds:
      - |
        curl -v --data '{wat"data": {}}' -X PATCH "{{ .API_BASE_URI }}/building_limits" | jq .

  # Make sure we don't crash and burn due to something small and stupid
  # test-smoke:
  #   set: ["e", "u", "x"]

  # Test a few API calls with
  test-stress:
    set: ["e", "u", "x"]
    cmds:
      # PATCH
      - hyperfine "curl -v --data @testdata/happypath/building_limits.geojson -X PATCH '{{ .API_BASE_URI }}/building_limits' | jq ."

      # GET
      - hyperfine "curl -v '{{ .API_BASE_URI }}/building_limits' | jq ."

  # La Vie En Rose mode
  test-happy-path:
    set: ["e", "u", "x"]
    cmds:
      - |
        # Test All GETs with pristine DB
        curl -v "{{ .API_BASE_URI }}/building_limits" | jq .
        curl -v "{{ .API_BASE_URI }}/split_building_limits" | jq .
        curl -v "{{ .API_BASE_URI }}/height_plateaus" | jq .

        # Create building limits
        curl -v -X PATCH --data @testdata/happypath/building_limits.geojson "{{ .API_BASE_URI }}/building_limits" | jq .

        # Create height plateaux
        curl -v -X PATCH --data @testdata/happypath/height_plateaux.geojson "{{ .API_BASE_URI }}/height_plateaus" | jq .

        # Fetch the limits
        curl -v "{{ .API_BASE_URI }}/split_building_limits" | jq .

  test-integration-dre-building-limits-intersection:
    set: ["e", "u", "x"]
    cmds:
      - |
        curl -v -X PATCH --data @testdata/dre/err_building_limits_intersection.geojson "{{ .API_BASE_URI }}/building_limits" | jq .
